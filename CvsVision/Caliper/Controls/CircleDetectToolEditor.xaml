<UserControl x:Class="CvsVision.Caliper.Controls.CircleDetectToolEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CvsVision.Caliper.Controls"
             xmlns:caliper="clr-namespace:CvsVision.Caliper"
             xmlns:con="clr-namespace:CvsVision.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="770" d:DesignWidth="800"
             MinWidth="800" MinHeight="800" Loaded="Editor_Loaded">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
        <ObjectDataProvider x:Key="DirectionFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="caliper:EDirection"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid Background="White" DataContext="{Binding ElementName=uc, Path=DataContext}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <con:CvsDisplay x:Name="display" OriginSource="{Binding OriginSource}" Overlay="{Binding ElementName=uc, Path=DataContext.Overlay}">
            <local:CircleSettingGraphic  
                                                Canvas.Left="{Binding OriginX, RelativeSource={RelativeSource Self}, Mode=TwoWay}" 
                                                Canvas.Top="{Binding OriginY, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                                OriginX="{Binding ElementName=uc, Path=DataContext.OriginX, Mode=TwoWay}"
                                                OriginY="{Binding ElementName=uc, Path=DataContext.OriginY, Mode=TwoWay}"
                                                StartAngle="{Binding ElementName=uc, Path=DataContext.StartAngle, Mode=TwoWay}"
                                                EndAngle="{Binding ElementName=uc, Path=DataContext.EndAngle, Mode=TwoWay}"
                                                IsOutwardDirection="{Binding ElementName=uc, Path=DataContext.IsOutwardDirection, Mode=TwoWay}"
                                                ProjectionLength="{Binding ElementName=uc, Path=DataContext.ProjectionLength, Mode=TwoWay}"
                                                SearchLength="{Binding ElementName=uc, Path=DataContext.SearchLength, Mode=TwoWay}"
                                                CaliperCount="{Binding ElementName=uc, Path=DataContext.CaliperCount, Mode=TwoWay}"
                                                Radius="{Binding ElementName=uc, Path=DataContext.Radius, Mode=TwoWay}"
                                                Visibility="{Binding ElementName=uc, Path=DataContext.IsEditing, Converter={StaticResource VisibilityConverter}}"/>

        </con:CvsDisplay>

        <Grid Grid.Column="1">
            <StackPanel>
                <Button Content="Load Image" Margin="20,10" Padding="5" Click="LoadImageBtn_Click"/>
                <Button Content="Load Tool" Margin="20,10" Padding="5" Click="LoadToolBtn_Click"/>
                <Button Content="Save Tool" Margin="20,10" Padding="5" Click="SaveToolBtn_Click"/>
                <ToggleButton Content="Edit Mode" Margin="20,10" Padding="5" IsChecked="{Binding ElementName=uc, Path=DataContext.IsEditing, Mode=TwoWay}"/>
            </StackPanel>
            <UniformGrid Margin="20,190,20,0" Columns="2" Rows="5" VerticalAlignment="Top" Visibility="{Binding ElementName=uc, Path=DataContext.IsEditing, Converter={StaticResource VisibilityConverter}}">
                <TextBlock Text="Circle Settings" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,-50,0"/>
                <TextBlock Text="" VerticalAlignment="Center" Margin="5"/>
                <TextBlock Text="Origin&#10;X / Y" VerticalAlignment="Center" Margin="5"/>
                <UniformGrid Rows="1">
                    <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.OriginX, StringFormat=N1}" Margin="0,0,2,0"/>
                    <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.OriginY, StringFormat=N1}" Margin="2,0,0,0"/>
                </UniformGrid>
                <TextBlock Text="Start / End&#10;Angle" VerticalAlignment="Center" Margin="5"/>
                <UniformGrid Rows="1">
                    <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.StartAngle, StringFormat=N1}" Margin="0,0,2,0"/>
                    <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.EndAngle, StringFormat=N1}" Margin="2,0,0,0"/>
                </UniformGrid>
                <TextBlock Text="Radius" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.Radius, StringFormat=N1}"/>
                <TextBlock Text="Search&#10;Direction" VerticalAlignment="Center" Margin="5"/>
                <UniformGrid Rows="1">
                    <RadioButton VerticalAlignment="Center" Content="In" GroupName="SearchDirection" Margin="0,0,2,0">
                        <RadioButton.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding  ElementName=uc, Path=DataContext.IsOutwardDirection}" Value="False">
                                        <Setter Property="RadioButton.IsChecked" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <RadioButton VerticalAlignment="Center" Content="Out" GroupName="SearchDirection" Margin="0,0,0,0" IsChecked="{Binding ElementName=uc, Path=DataContext.IsOutwardDirection, Mode=TwoWay}"/>
                </UniformGrid>
                <TextBlock Text="Caliper&#10;Count" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.CaliperCount, FallbackValue=4}"/>
                <TextBlock Text="Consensus&#10;Threshold" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.ConsensusThreshold, FallbackValue=6}"/>

                <TextBlock Text="Caliper Settings" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,-50,0"/>
                <TextBlock Text="" VerticalAlignment="Center" Margin="5"/>

                <TextBlock Text="Projection&#10;Length" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.ProjectionLength, StringFormat=N1}"/>
                <TextBlock Text="Search&#10;Length" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.SearchLength, StringFormat=N1}"/>
                <TextBlock Text="Contrast&#10;Threshold" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.ContrastThreshold, FallbackValue=5}"/>
                <TextBlock Text="Half Size&#10;Pixel Count" VerticalAlignment="Center" Margin="5"/>
                <TextBox VerticalAlignment="Center" Text="{Binding ElementName=uc, Path=DataContext.HalfPixelCount, FallbackValue=2}"/>
                <TextBlock Text="Edge&#10;Direction" VerticalAlignment="Center" Margin="5"/>
                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource DirectionFromEnum}}" SelectedIndex="{Binding SelectedEdgeDirection}"/>
            </UniformGrid>
            <Button Content="RUN" VerticalAlignment="Bottom" Margin="20,10" Padding="5" Click="RunBtn_Click"/>
        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0">
            <TextBlock Text="{Binding Message}"/>
        </Grid>
    </Grid>
</UserControl>